[package]
name = "electricity_exhange"
edition = "2021"
version = "0.1.0"

[dependencies]
shared = { path = "../shared" }

esp-hal = { version = "0.18.0", features = [
    "esp32c3",
    "async",

    # "time-driver-any",
    # "interrupt-preemption",
    # "direct-vectoring",
] }
display-interface-spi = "0.5.0"
embedded-graphics = "0.8.1"
embedded-hal-bus = "0.2.0"
esp-backtrace = { version = "0.11.1", features = [
    "esp32c3",
    "exception-handler",
    "panic-handler",
    "println",
] }
esp-println = { version = "0.9.1", features = ["esp32c3", "uart"] }
esp32c3 = { version = "0.22.0", features = ["rt", "critical-section"] }
fugit = "0.3.7"
mipidsi = "0.8.0"
# rtic = { version = '2.1', features = ["riscv-esp32c3-backend"] }
rtic = { git = "https://github.com/rtic-rs/rtic", features = [
    "riscv-esp32c3-backend",
] }
embedded-hal-async = "1.0.0"
esp-hal-embassy = { version = "0.1.0", features = ["esp32c3", "time-timg0"] }
embassy-executor = "0.5.0"
embassy-time = { version = "0.3.1", features = ["generic-queue-8"] }
heapless = "0.8.0"
embedded-graphics-framebuf = "0.5.0"
embassy-usb = "0.2.0"
embedded-io-async = "0.6.1"
corncobs = "0.1.3"
embassy-sync = "0.6.0"
static_cell = "2.1.0"
embassy-time-driver = "0.1.0"
esp-wifi = { version = "0.6.0", features = [
    "embedded-svc",
    "esp32c3",
    "tcp",
    "wifi-default",
    "async",
    "embassy-net",
] }
reqwless = "0.12.1"
embassy-net = { version = "0.4.0", features = [
    "tcp",
    "dhcpv4",
    # "medium-ethernet",

] }

# cargo build/run
[profile.dev]
opt-level = "s"

# cargo test
[profile.test]
codegen-units = 1
debug = 2
debug-assertions = true # <-
incremental = false
opt-level = "s"         # <-
overflow-checks = true  # <-

# cargo build/run --release
[profile.release]
codegen-units = 1
debug = 2
debug-assertions = false # <-
incremental = false
# lto = 'fat'
opt-level = "s"         # <-
overflow-checks = false # <-

# cargo test --release
[profile.bench]
codegen-units = 1
debug = 2
debug-assertions = false # <-
incremental = false
lto = 'fat'
opt-level = "s"          # <-
overflow-checks = false  # <-

[profile.dev.package.esp-wifi]
opt-level = 3


# uncomment this to switch from the crates.io version of defmt to its git version
# check app-template's README for instructions
# [patch.crates-io]
# defmt = { git = "https://github.com/knurling-rs/defmt", rev = "use defmt version supported by probe-rs (see changelog)" }
# defmt-rtt = { git = "https://github.com/knurling-rs/defmt", rev = "use defmt version supported by probe-rs (see changelog)" }
# defmt-test = { git = "https://github.com/knurling-rs/defmt", rev = "use defmt version supported by probe-rs (see changelog)" }
# panic-probe = { git = "https://github.com/knurling-rs/defmt", rev = "use defmt version supported by probe-rs (see changelog)" }
